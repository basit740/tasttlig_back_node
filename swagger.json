{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasttlig Application API",
    "description": "API for Tasttlig Application <h2> Errors</h2>\n\n    The API uses standard HTTP status codes to indicate the success or failure of the API call.\n\n    Here are a list of different types of error responses\n\n    Status code  | Description | Content type\n    ----------------|-------------|---------\n    400 | Bad Request | application/json\n    401 | Unauthorized | text/html\n    403 | Forbidden | text/html\n    404 | Not Found | application/json",
    "x-logo": {
      "altText": "Tasttlig",
      "href": "https://tasttlig.com",
      "url": "https://s3.us-east-2.amazonaws.com/content.tasttlig.com/globe-logo-red.8d542dc5-150-a.png"
    }
  },
  "tags": [
    {
      "name": "Payments",
      "description": "Payments related operations"
    },
    {
      "name": "Orders",
      "description": "Order related operations"
    },
    {
      "name": "User Subscriptions",
      "description": "User subscription related operations"
    }
  ],
  "paths": {
    "/payments/cart/checkout": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create an order",
        "description": "Create a new order from the cart items specified and returns a payment intent that should be used to complete payment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CheckoutItem"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order created successfully and pending payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "order": {
                      "$ref": "#/components/schemas/Order"
                    },
                    "intent": {
                      "$ref": "#/components/schemas/PartialPaymentIntent"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments/cart/cancel": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Cancel an order",
        "description": "Cancels an order. Orders that have already been cancelled or have been successfully processed cannot be cancelled",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order was successfully canceled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "intent": {
                      "$ref": "#/components/schemas/PaymentIntent"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user_subscriptions": {
      "get": {
        "tags": [
          "User Subscriptions"
        ],
        "summary": "Retrieve subscriptions for a user",
        "description": "Returns a list of all subscriptions for the logged in user. This includes <code>pending</code> and <code>cancelled</code> subscriptions",
        "responses": {
          "200": {
            "description": "List of all subscriptions for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "subscriptions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserSubscriptionsResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Subscriptions"
        ],
        "summary": "Create a new user subscription",
        "description": "Creates a new subscription for the logged in user. The subscription will be set to <code>incomplete</code> status until payment is completed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was successfully subscribed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "intent": {
                      "$ref": "#/components/schemas/PartialPaymentIntent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subscription was not found"
          },
          "409": {
            "description": "User already has subscription"
          }
        }
      }
    },
    "/user_subscriptions/:id": {
      "delete": {
        "tags": [
          "User Subscriptions"
        ],
        "summary": "Cancel a subscription",
        "description": "Cancel an existing user subscription. This will immediately cease recurring charges to the user's payment method",
        "responses": {
          "200": {
            "description": "Subscription was successfully cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "subscription": {
                      "$ref": "#/components/schemas/StripeSubscription"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User subscription was not found"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve orders for a user",
        "description": "Retrieve all order for the currently logged in user",
        "responses": {
          "200": {
            "description": "All orders for the currently logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "orders": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CheckoutItem": {
        "required": [
          "itemType",
          "itemId",
          "quantity"
        ],
        "properties": {
          "itemType": {
            "type": "string",
            "description": "The festival content type. Should be one of `experience`, `special`, `product`",
            "example": "experience"
          },
          "itemId": {
            "type": "integer",
            "description": "ID of the festival content",
            "example": 23
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity in the cart",
            "example": 1
          }
        }
      },
      "Order": {
        "properties": {
          "order_id": {
            "type": "integer"
          },
          "order_by_user_id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "total_amount_before_tax": {
            "type": "number"
          },
          "total_tax": {
            "type": "number"
          },
          "total_amount_after_tax": {
            "type": "number"
          },
          "order_datetime": {
            "type": "string"
          },
          "intent_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "order_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          }
        }
      },
      "OrderItem": {
        "properties": {
          "order_item_id": {
            "type": "number"
          },
          "order_id": {
            "type": "number"
          },
          "item_id": {
            "type": "number"
          },
          "item_type": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "price_before_tax": {
            "type": "number"
          }
        }
      },
      "PartialPaymentIntent": {
        "properties": {
          "id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "client_secret": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "PaymentIntent": {
        "properties": {
          "id": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "amount_capturable": {
            "type": "number"
          },
          "amount_received": {
            "type": "number"
          },
          "canceled_at": {
            "type": "number"
          },
          "cancellation_reason": {
            "type": "string"
          },
          "capture_method": {
            "type": "string"
          },
          "charges": {
            "type": "object",
            "properties": {
              "object": {
                "type": "string"
              },
              "data": {
                "type": "array"
              },
              "has_more": {
                "type": "boolean"
              },
              "total_count": {
                "type": "number"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "client_secret": {
            "type": "string"
          },
          "confirmation_method": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          },
          "customer": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "invoice": {
            "type": "object"
          },
          "livemode": {
            "type": "boolean"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "items": {
                "type": "string"
              }
            }
          },
          "payment_method_options": {
            "type": "object",
            "properties": {
              "card": {
                "type": "object",
                "properties": {
                  "request_three_d_secure": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "payment_method_types": {
            "type": "array"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UserSubscription": {
        "properties": {
          "user_subscription_id": {
            "type": "number"
          },
          "user_id": {
            "type": "number"
          },
          "subscription_code": {
            "type": "string"
          },
          "subscription_start_datetime": {
            "type": "number"
          },
          "subscription_end_datetime": {
            "type": "number"
          },
          "suscribed_festivals": {
            "type": "array"
          },
          "cash_payment_received": {
            "type": "number"
          },
          "user_subscription_status": {
            "type": "string"
          },
          "business_id": {
            "type": "number"
          },
          "reference_id": {
            "type": "string"
          }
        }
      },
      "StripeSubscription": {
        "properties": {
          "subscription_id": {
            "type": "number"
          },
          "subscription_code": {
            "type": "string"
          },
          "subscription_name": {
            "type": "string"
          },
          "date_of_expiry": {
            "type": "number"
          },
          "validity_in_months": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "subscription_type": {
            "type": "string"
          },
          "comission_to_pay_percentage": {
            "type": "number"
          },
          "payment_receivable_per_food_sample": {
            "type": "number"
          },
          "can_sell_food_directly_to_guests": {
            "type": "boolean"
          },
          "can_sell_food_experiences_to_guests": {
            "type": "boolean"
          },
          "fesitval_limit": {
            "type": "number"
          },
          "products_services__sponsor_limit": {
            "type": "number"
          },
          "sponsoring_restaurants_limit": {
            "type": "number"
          },
          "discount_for_members": {
            "type": "number"
          },
          "trial_period": {
            "type": "number"
          }
        }
      },
      "UserSubscriptionsResponse": {
        "properties": {
          "user_subscription_id": {
            "type": "number"
          },
          "user_id": {
            "type": "number"
          },
          "subscription_code": {
            "type": "string"
          },
          "subscription_start_datetime": {
            "type": "number"
          },
          "subscription_end_datetime": {
            "type": "number"
          },
          "suscribed_festivals": {
            "type": "array"
          },
          "cash_payment_received": {
            "type": "number"
          },
          "user_subscription_status": {
            "type": "string"
          },
          "business_id": {
            "type": "number"
          },
          "reference_id": {
            "type": "string"
          },
          "subscription": {
            "$ref": "#/components/schemas/StripeSubscription"
          },
          "intent": {
            "$ref": "#/components/schemas/PartialPaymentIntent"
          }
        }
      }
    }
  }
}